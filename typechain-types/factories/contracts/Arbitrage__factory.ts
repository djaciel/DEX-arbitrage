/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Arbitrage, ArbitrageInterface } from "../../contracts/Arbitrage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "apeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrage.ActionQuote",
        name: "actionQuote",
        type: "tuple",
      },
    ],
    name: "getAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pancakeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Pair",
            name: "pair",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_a",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_b",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_c",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToPay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrage.Action",
        name: "_action",
        type: "tuple",
      },
    ],
    name: "performArbitrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61239c806200010e6000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b14610124578063961310491461014f578063becda36314610178578063c224337914610194578063f2fde38b146101bd57610086565b8063616213441461008b578063619375da146100c8578063715018a6146100f15780638480081214610108575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad919061132d565b6101e6565b6040516100bf9190611434565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea919061147b565b6104f2565b005b3480156100fd57600080fd5b5061010661070d565b005b610122600480360381019061011d919061151f565b610721565b005b34801561013057600080fd5b506101396107fd565b60405161014691906115b6565b60405180910390f35b34801561015b57600080fd5b50610176600480360381019061017191906115d1565b610826565b005b610192600480360381019061018d919061151f565b610947565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190611654565b610a23565b005b3480156101c957600080fd5b506101e460048036038101906101df91906115d1565b610b27565b005b60606000600367ffffffffffffffff8111156102055761020461101a565b5b6040519080825280602002602001820160405280156102335781602001602082028036833780820191505090505b509050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8460a0015185604001516040518363ffffffff1660e01b815260040161027d929190611781565b60006040518083038186803b15801561029557600080fd5b505afa1580156102a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102d29190611889565b6001815181106102e5576102e46118d2565b5b602002602001015181600081518110610301576103006118d2565b5b602002602001018181525050826020015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f82600081518110610341576103406118d2565b5b602002602001015185606001516040518363ffffffff1660e01b815260040161036b929190611781565b60006040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103c09190611889565b6001815181106103d3576103d26118d2565b5b6020026020010151816001815181106103ef576103ee6118d2565b5b602002602001018181525050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8260018151811061042f5761042e6118d2565b5b602002602001015185608001516040518363ffffffff1660e01b8152600401610459929190611781565b60006040518083038186803b15801561047157600080fd5b505afa158015610485573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ae9190611889565b6001815181106104c1576104c06118d2565b5b6020026020010151816002815181106104dd576104dc6118d2565b5b60200260200101818152505080915050919050565b6000816040016020810190610507919061193f565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611981565b90506000826040516020016105999190611d33565b60405160208183030381529060405290508260600160208101906105bd91906115d1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561067e57826040016020810190610603919061193f565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f846101200135600030856040518563ffffffff1660e01b81526004016106479493929190611e18565b600060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b50505050610708565b826040016020810190610691919061193f565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f600085610120013530856040518563ffffffff1660e01b81526004016106d59493929190611e64565b600060405180830381600087803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b505050505b505050565b610715610bab565b61071f6000610c29565b565b60008414806107305750600083145b61073d5761073c611eb0565b5b6000828281019061074e9190612081565b9050600061075b82610ced565b9050816060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338461018001516040518363ffffffff1660e01b81526004016107a19291906120ca565b602060405180830381600087803b1580156107bb57600080fd5b505af11580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f3919061212b565b5050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61082e610bab565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161088491906115b6565b60206040518083038186803b15801561089c57600080fd5b505afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190612158565b6040518363ffffffff1660e01b81526004016108f19291906120ca565b602060405180830381600087803b15801561090b57600080fd5b505af115801561091f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610943919061212b565b5050565b60008414806109565750600083145b61096357610962611eb0565b5b600082828101906109749190612081565b9050600061098182610ced565b9050816060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338461018001516040518363ffffffff1660e01b81526004016109c79291906120ca565b602060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a19919061212b565b5050505050505050565b610a2b610bab565b60005b83839050811015610b2157838382818110610a4c57610a4b6118d2565b5b9050602002016020810190610a6191906115d1565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610abb9291906120ca565b602060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d919061212b565b508080610b19906121b4565b915050610a2e565b50505050565b610b2f610bab565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690612280565b60405180910390fd5b610ba881610c29565b50565b610bb3610fe8565b73ffffffffffffffffffffffffffffffffffffffff16610bd16107fd565b73ffffffffffffffffffffffffffffffffffffffff1614610c27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1e906122ec565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806040518060c00160405280846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff1681526020018460c0015181526020018460e001518152602001846101000151815260200184610120015181525090506000610d70826101e6565b9050836000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee82600081518110610da657610da56118d2565b5b60200260200101518661012001518760c0015130896101a001516040518663ffffffff1660e01b8152600401610de095949392919061230c565b600060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e379190611889565b50836020015173ffffffffffffffffffffffffffffffffffffffff16638803dbee82600181518110610e6c57610e6b6118d2565b5b60200260200101518661014001518760e0015130896101a001516040518663ffffffff1660e01b8152600401610ea695949392919061230c565b600060405180830381600087803b158015610ec057600080fd5b505af1158015610ed4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610efd9190611889565b50836000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee82600281518110610f3257610f316118d2565b5b602002602001015186610160015187610100015130896101a001516040518663ffffffff1660e01b8152600401610f6d95949392919061230c565b600060405180830381600087803b158015610f8757600080fd5b505af1158015610f9b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610fc49190611889565b600181518110610fd757610fd66118d2565b5b602002602001015192505050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61105282611009565b810181811067ffffffffffffffff821117156110715761107061101a565b5b80604052505050565b6000611084610ff0565b90506110908282611049565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110c58261109a565b9050919050565b60006110d7826110ba565b9050919050565b6110e7816110cc565b81146110f257600080fd5b50565b600081359050611104816110de565b92915050565b600080fd5b600067ffffffffffffffff82111561112a5761112961101a565b5b602082029050602081019050919050565b600080fd5b611149816110ba565b811461115457600080fd5b50565b60008135905061116681611140565b92915050565b600061117f61117a8461110f565b61107a565b905080838252602082019050602084028301858111156111a2576111a161113b565b5b835b818110156111cb57806111b78882611157565b8452602084019350506020810190506111a4565b5050509392505050565b600082601f8301126111ea576111e961110a565b5b81356111fa84826020860161116c565b91505092915050565b6000819050919050565b61121681611203565b811461122157600080fd5b50565b6000813590506112338161120d565b92915050565b600060c0828403121561124f5761124e611004565b5b61125960c061107a565b90506000611269848285016110f5565b600083015250602061127d848285016110f5565b602083015250604082013567ffffffffffffffff8111156112a1576112a0611095565b5b6112ad848285016111d5565b604083015250606082013567ffffffffffffffff8111156112d1576112d0611095565b5b6112dd848285016111d5565b606083015250608082013567ffffffffffffffff81111561130157611300611095565b5b61130d848285016111d5565b60808301525060a061132184828501611224565b60a08301525092915050565b60006020828403121561134357611342610ffa565b5b600082013567ffffffffffffffff81111561136157611360610fff565b5b61136d84828501611239565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113ab81611203565b82525050565b60006113bd83836113a2565b60208301905092915050565b6000602082019050919050565b60006113e182611376565b6113eb8185611381565b93506113f683611392565b8060005b8381101561142757815161140e88826113b1565b9750611419836113c9565b9250506001810190506113fa565b5085935050505092915050565b6000602082019050818103600083015261144e81846113d6565b905092915050565b600080fd5b60006101c0828403121561147257611471611456565b5b81905092915050565b60006020828403121561149157611490610ffa565b5b600082013567ffffffffffffffff8111156114af576114ae610fff565b5b6114bb8482850161145b565b91505092915050565b600080fd5b60008083601f8401126114df576114de61110a565b5b8235905067ffffffffffffffff8111156114fc576114fb6114c4565b5b6020830191508360018202830111156115185761151761113b565b5b9250929050565b60008060008060006080868803121561153b5761153a610ffa565b5b600061154988828901611157565b955050602061155a88828901611224565b945050604061156b88828901611224565b935050606086013567ffffffffffffffff81111561158c5761158b610fff565b5b611598888289016114c9565b92509250509295509295909350565b6115b0816110ba565b82525050565b60006020820190506115cb60008301846115a7565b92915050565b6000602082840312156115e7576115e6610ffa565b5b60006115f584828501611157565b91505092915050565b60008083601f8401126116145761161361110a565b5b8235905067ffffffffffffffff811115611631576116306114c4565b5b60208301915083602082028301111561164d5761164c61113b565b5b9250929050565b60008060006040848603121561166d5761166c610ffa565b5b600084013567ffffffffffffffff81111561168b5761168a610fff565b5b611697868287016115fe565b935093505060206116aa86828701611157565b9150509250925092565b6116bd81611203565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116f8816110ba565b82525050565b600061170a83836116ef565b60208301905092915050565b6000602082019050919050565b600061172e826116c3565b61173881856116ce565b9350611743836116df565b8060005b8381101561177457815161175b88826116fe565b975061176683611716565b925050600181019050611747565b5085935050505092915050565b600060408201905061179660008301856116b4565b81810360208301526117a88184611723565b90509392505050565b600067ffffffffffffffff8211156117cc576117cb61101a565b5b602082029050602081019050919050565b6000815190506117ec8161120d565b92915050565b6000611805611800846117b1565b61107a565b905080838252602082019050602084028301858111156118285761182761113b565b5b835b81811015611851578061183d88826117dd565b84526020840193505060208101905061182a565b5050509392505050565b600082601f8301126118705761186f61110a565b5b81516118808482602086016117f2565b91505092915050565b60006020828403121561189f5761189e610ffa565b5b600082015167ffffffffffffffff8111156118bd576118bc610fff565b5b6118c98482850161185b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061190c826110ba565b9050919050565b61191c81611901565b811461192757600080fd5b50565b60008135905061193981611913565b92915050565b60006020828403121561195557611954610ffa565b5b60006119638482850161192a565b91505092915050565b60008151905061197b81611140565b92915050565b60006020828403121561199757611996610ffa565b5b60006119a58482850161196c565b91505092915050565b60006119bd60208401846110f5565b905092915050565b6000819050919050565b60006119ea6119e56119e08461109a565b6119c5565b61109a565b9050919050565b60006119fc826119cf565b9050919050565b6000611a0e826119f1565b9050919050565b611a1e81611a03565b82525050565b6000611a33602084018461192a565b905092915050565b6000611a46826119f1565b9050919050565b611a5681611a3b565b82525050565b6000611a6b6020840184611157565b905092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611a9f57611a9e611a7d565b5b83810192508235915060208301925067ffffffffffffffff821115611ac757611ac6611a73565b5b602082023603841315611add57611adc611a78565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000602082019050919050565b6000611b198385611ae5565b9350611b2482611af6565b8060005b85811015611b5d57611b3a8284611a5c565b611b4488826116fe565b9750611b4f83611b00565b925050600181019050611b28565b5085925050509392505050565b6000611b796020840184611224565b905092915050565b60006101c08301611b9560008401846119ae565b611ba26000860182611a15565b50611bb060208401846119ae565b611bbd6020860182611a15565b50611bcb6040840184611a24565b611bd86040860182611a4d565b50611be66060840184611a5c565b611bf360608601826116ef565b50611c016080840184611a5c565b611c0e60808601826116ef565b50611c1c60a0840184611a5c565b611c2960a08601826116ef565b50611c3760c0840184611a82565b85830360c0870152611c4a838284611b0d565b92505050611c5b60e0840184611a82565b85830360e0870152611c6e838284611b0d565b92505050611c80610100840184611a82565b858303610100870152611c94838284611b0d565b92505050611ca6610120840184611b6a565b611cb46101208601826113a2565b50611cc3610140840184611b6a565b611cd16101408601826113a2565b50611ce0610160840184611b6a565b611cee6101608601826113a2565b50611cfd610180840184611b6a565b611d0b6101808601826113a2565b50611d1a6101a0840184611b6a565b611d286101a08601826113a2565b508091505092915050565b60006020820190508181036000830152611d4d8184611b81565b905092915050565b6000819050919050565b6000611d7a611d75611d7084611d55565b6119c5565b611203565b9050919050565b611d8a81611d5f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dca578082015181840152602081019050611daf565b83811115611dd9576000848401525b50505050565b6000611dea82611d90565b611df48185611d9b565b9350611e04818560208601611dac565b611e0d81611009565b840191505092915050565b6000608082019050611e2d60008301876116b4565b611e3a6020830186611d81565b611e4760408301856115a7565b8181036060830152611e598184611ddf565b905095945050505050565b6000608082019050611e796000830187611d81565b611e8660208301866116b4565b611e9360408301856115a7565b8181036060830152611ea58184611ddf565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006101c08284031215611ef657611ef5611004565b5b611f016101c061107a565b90506000611f11848285016110f5565b6000830152506020611f25848285016110f5565b6020830152506040611f398482850161192a565b6040830152506060611f4d84828501611157565b6060830152506080611f6184828501611157565b60808301525060a0611f7584828501611157565b60a08301525060c082013567ffffffffffffffff811115611f9957611f98611095565b5b611fa5848285016111d5565b60c08301525060e082013567ffffffffffffffff811115611fc957611fc8611095565b5b611fd5848285016111d5565b60e08301525061010082013567ffffffffffffffff811115611ffa57611ff9611095565b5b612006848285016111d5565b6101008301525061012061201c84828501611224565b6101208301525061014061203284828501611224565b6101408301525061016061204884828501611224565b6101608301525061018061205e84828501611224565b610180830152506101a061207484828501611224565b6101a08301525092915050565b60006020828403121561209757612096610ffa565b5b600082013567ffffffffffffffff8111156120b5576120b4610fff565b5b6120c184828501611edf565b91505092915050565b60006040820190506120df60008301856115a7565b6120ec60208301846116b4565b9392505050565b60008115159050919050565b612108816120f3565b811461211357600080fd5b50565b600081519050612125816120ff565b92915050565b60006020828403121561214157612140610ffa565b5b600061214f84828501612116565b91505092915050565b60006020828403121561216e5761216d610ffa565b5b600061217c848285016117dd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121bf82611203565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121f2576121f1612185565b5b600182019050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061226a6026836121fd565b91506122758261220e565b604082019050919050565b600060208201905081810360008301526122998161225d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006122d66020836121fd565b91506122e1826122a0565b602082019050919050565b60006020820190508181036000830152612305816122c9565b9050919050565b600060a08201905061232160008301886116b4565b61232e60208301876116b4565b81810360408301526123408186611723565b905061234f60608301856115a7565b61235c60808301846116b4565b969550505050505056fea26469706673582212201a6c8abe7e942ac5aacdb7162a74c316d1f9a735abf32539dc6d075a95cfeee264736f6c63430008090033";

type ArbitrageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arbitrage__factory extends ContractFactory {
  constructor(...args: ArbitrageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrage> {
    return super.deploy(overrides || {}) as Promise<Arbitrage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Arbitrage {
    return super.attach(address) as Arbitrage;
  }
  override connect(signer: Signer): Arbitrage__factory {
    return super.connect(signer) as Arbitrage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageInterface {
    return new utils.Interface(_abi) as ArbitrageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrage {
    return new Contract(address, _abi, signerOrProvider) as Arbitrage;
  }
}
