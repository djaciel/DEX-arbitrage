/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Arbitrage, ArbitrageInterface } from "../../contracts/Arbitrage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Quote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "elkCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrage.ActionQuote",
        name: "actionQuote",
        type: "tuple",
      },
    ],
    name: "getAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "hook",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pancakeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Pair",
            name: "pair",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_a",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_b",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_c",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToPay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Arbitrage.Action",
        name: "_action",
        type: "tuple",
      },
    ],
    name: "performArbitrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "soulswapCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "wigoswapCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6125db80620001146000396000f3fe6080604052600436106100c25760003560e01c8063848008121161007f5780639a7bff79116100595780639a7bff7914610208578063c224337914610224578063d4f9a2ee1461024d578063f2fde38b14610269576100c2565b806384800812146101985780638da5cb5b146101b457806396131049146101df576100c2565b806307d3513a146100c757806310d1e85c146100e357806348c5b27e146100ff578063616213441461011b5780636270d51014610158578063715018a614610181575b600080fd5b6100e160048036038101906100dc91906112ff565b610292565b005b6100fd60048036038101906100f891906112ff565b6102c0565b005b610119600480360381019061011491906112ff565b6102ee565b005b34801561012757600080fd5b50610142600480360381019061013d9190611612565b61031c565b60405161014f9190611719565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190611760565b610628565b005b34801561018d57600080fd5b50610196610843565b005b6101b260048036038101906101ad91906112ff565b610857565b005b3480156101c057600080fd5b506101c9610885565b6040516101d691906117b8565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906117d3565b6108ae565b005b610222600480360381019061021d91906112ff565b6109cf565b005b34801561023057600080fd5b5061024b60048036038101906102469190611856565b6109fd565b005b610267600480360381019061026291906112ff565b610b01565b005b34801561027557600080fd5b50610290600480360381019061028b91906117d3565b610b2f565b005b60008414806102a15750600083145b6102ae576102ad6118b6565b5b6102b88282610bb3565b505050505050565b60008414806102cf5750600083145b6102dc576102db6118b6565b5b6102e68282610bb3565b505050505050565b60008414806102fd5750600083145b61030a576103096118b6565b5b6103148282610bb3565b505050505050565b60606000600367ffffffffffffffff81111561033b5761033a61139d565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b509050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8460a0015185604001516040518363ffffffff1660e01b81526004016103b39291906119b2565b60006040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104089190611aba565b60018151811061041b5761041a611b03565b5b60200260200101518160008151811061043757610436611b03565b5b602002602001018181525050826020015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8260008151811061047757610476611b03565b5b602002602001015185606001516040518363ffffffff1660e01b81526004016104a19291906119b2565b60006040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104f69190611aba565b60018151811061050957610508611b03565b5b60200260200101518160018151811061052557610524611b03565b5b602002602001018181525050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8260018151811061056557610564611b03565b5b602002602001015185608001516040518363ffffffff1660e01b815260040161058f9291906119b2565b60006040518083038186803b1580156105a757600080fd5b505afa1580156105bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105e49190611aba565b6001815181106105f7576105f6611b03565b5b60200260200101518160028151811061061357610612611b03565b5b60200260200101818152505080915050919050565b600081604001602081019061063d9190611b70565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561068257600080fd5b505afa158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190611bb2565b90506000826040516020016106cf9190611f2a565b60405160208183030381529060405290508260600160208101906106f391906117d3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107b4578260400160208101906107399190611b70565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f846101200135600030856040518563ffffffff1660e01b815260040161077d949392919061200f565b600060405180830381600087803b15801561079757600080fd5b505af11580156107ab573d6000803e3d6000fd5b5050505061083e565b8260400160208101906107c79190611b70565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f600085610120013530856040518563ffffffff1660e01b815260040161080b949392919061205b565b600060405180830381600087803b15801561082557600080fd5b505af1158015610839573d6000803e3d6000fd5b505050505b505050565b61084b6110a8565b6108556000611126565b565b60008414806108665750600083145b610873576108726118b6565b5b61087d8282610bb3565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108b66110a8565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161090c91906117b8565b60206040518083038186803b15801561092457600080fd5b505afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c91906120a7565b6040518363ffffffff1660e01b81526004016109799291906120d4565b602060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb9190612135565b5050565b60008414806109de5750600083145b6109eb576109ea6118b6565b5b6109f58282610bb3565b505050505050565b610a056110a8565b60005b83839050811015610afb57838382818110610a2657610a25611b03565b5b9050602002016020810190610a3b91906117d3565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610a959291906120d4565b602060405180830381600087803b158015610aaf57600080fd5b505af1158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae79190612135565b508080610af390612191565b915050610a08565b50505050565b6000841480610b105750600083145b610b1d57610b1c6118b6565b5b610b278282610bb3565b505050505050565b610b376110a8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e9061225d565b60405180910390fd5b610bb081611126565b50565b6000808383810190610bc591906123f3565b905060006040518060c00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360c0015181526020018360e001518152602001836101000151815260200183610120015181525090506000610c498261031c565b90506060836000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee83600081518110610c8157610c80611b03565b5b60200260200101518661012001518760c00151308961016001516040518663ffffffff1660e01b8152600401610cbb95949392919061243c565b600060405180830381600087803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d129190611aba565b90507f775de62829f721d788722b2be1fe795e11540a8740b2236dfc8d8ae3d897d3088460c0015182604051610d49929190612496565b60405180910390a1836020015173ffffffffffffffffffffffffffffffffffffffff16638803dbee83600181518110610d8557610d84611b03565b5b602002602001015184600081518110610da157610da0611b03565b5b60200260200101518760e00151308961016001516040518663ffffffff1660e01b8152600401610dd595949392919061243c565b600060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e2c9190611aba565b90507f775de62829f721d788722b2be1fe795e11540a8740b2236dfc8d8ae3d897d3088460e0015182604051610e63929190612496565b60405180910390a1836000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee83600281518110610e9f57610e9e611b03565b5b602002602001015184600181518110610ebb57610eba611b03565b5b6020026020010151876101000151308961016001516040518663ffffffff1660e01b8152600401610ef095949392919061243c565b600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f479190611aba565b90507f775de62829f721d788722b2be1fe795e11540a8740b2236dfc8d8ae3d897d30884610100015182604051610f7f929190612496565b60405180910390a183610140015181600181518110610fa157610fa0611b03565b5b602002602001015111610fe9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe090612519565b60405180910390fd5b836060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338661014001516040518363ffffffff1660e01b815260040161102d9291906120d4565b602060405180830381600087803b15801561104757600080fd5b505af115801561105b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107f9190612135565b508060018151811061109457611093611b03565b5b602002602001015194505050505092915050565b6110b06111ea565b73ffffffffffffffffffffffffffffffffffffffff166110ce610885565b73ffffffffffffffffffffffffffffffffffffffff1614611124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111b90612585565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061123182611206565b9050919050565b61124181611226565b811461124c57600080fd5b50565b60008135905061125e81611238565b92915050565b6000819050919050565b61127781611264565b811461128257600080fd5b50565b6000813590506112948161126e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112bf576112be61129a565b5b8235905067ffffffffffffffff8111156112dc576112db61129f565b5b6020830191508360018202830111156112f8576112f76112a4565b5b9250929050565b60008060008060006080868803121561131b5761131a6111fc565b5b60006113298882890161124f565b955050602061133a88828901611285565b945050604061134b88828901611285565b935050606086013567ffffffffffffffff81111561136c5761136b611201565b5b611378888289016112a9565b92509250509295509295909350565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113d58261138c565b810181811067ffffffffffffffff821117156113f4576113f361139d565b5b80604052505050565b60006114076111f2565b905061141382826113cc565b919050565b600080fd5b600061142882611226565b9050919050565b6114388161141d565b811461144357600080fd5b50565b6000813590506114558161142f565b92915050565b600067ffffffffffffffff8211156114765761147561139d565b5b602082029050602081019050919050565b600061149a6114958461145b565b6113fd565b905080838252602082019050602084028301858111156114bd576114bc6112a4565b5b835b818110156114e657806114d2888261124f565b8452602084019350506020810190506114bf565b5050509392505050565b600082601f8301126115055761150461129a565b5b8135611515848260208601611487565b91505092915050565b600060c0828403121561153457611533611387565b5b61153e60c06113fd565b9050600061154e84828501611446565b600083015250602061156284828501611446565b602083015250604082013567ffffffffffffffff81111561158657611585611418565b5b611592848285016114f0565b604083015250606082013567ffffffffffffffff8111156115b6576115b5611418565b5b6115c2848285016114f0565b606083015250608082013567ffffffffffffffff8111156115e6576115e5611418565b5b6115f2848285016114f0565b60808301525060a061160684828501611285565b60a08301525092915050565b600060208284031215611628576116276111fc565b5b600082013567ffffffffffffffff81111561164657611645611201565b5b6116528482850161151e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61169081611264565b82525050565b60006116a28383611687565b60208301905092915050565b6000602082019050919050565b60006116c68261165b565b6116d08185611666565b93506116db83611677565b8060005b8381101561170c5781516116f38882611696565b97506116fe836116ae565b9250506001810190506116df565b5085935050505092915050565b6000602082019050818103600083015261173381846116bb565b905092915050565b600080fd5b600061018082840312156117575761175661173b565b5b81905092915050565b600060208284031215611776576117756111fc565b5b600082013567ffffffffffffffff81111561179457611793611201565b5b6117a084828501611740565b91505092915050565b6117b281611226565b82525050565b60006020820190506117cd60008301846117a9565b92915050565b6000602082840312156117e9576117e86111fc565b5b60006117f78482850161124f565b91505092915050565b60008083601f8401126118165761181561129a565b5b8235905067ffffffffffffffff8111156118335761183261129f565b5b60208301915083602082028301111561184f5761184e6112a4565b5b9250929050565b60008060006040848603121561186f5761186e6111fc565b5b600084013567ffffffffffffffff81111561188d5761188c611201565b5b61189986828701611800565b935093505060206118ac8682870161124f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6118ee81611264565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61192981611226565b82525050565b600061193b8383611920565b60208301905092915050565b6000602082019050919050565b600061195f826118f4565b61196981856118ff565b935061197483611910565b8060005b838110156119a557815161198c888261192f565b975061199783611947565b925050600181019050611978565b5085935050505092915050565b60006040820190506119c760008301856118e5565b81810360208301526119d98184611954565b90509392505050565b600067ffffffffffffffff8211156119fd576119fc61139d565b5b602082029050602081019050919050565b600081519050611a1d8161126e565b92915050565b6000611a36611a31846119e2565b6113fd565b90508083825260208201905060208402830185811115611a5957611a586112a4565b5b835b81811015611a825780611a6e8882611a0e565b845260208401935050602081019050611a5b565b5050509392505050565b600082601f830112611aa157611aa061129a565b5b8151611ab1848260208601611a23565b91505092915050565b600060208284031215611ad057611acf6111fc565b5b600082015167ffffffffffffffff811115611aee57611aed611201565b5b611afa84828501611a8c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b3d82611226565b9050919050565b611b4d81611b32565b8114611b5857600080fd5b50565b600081359050611b6a81611b44565b92915050565b600060208284031215611b8657611b856111fc565b5b6000611b9484828501611b5b565b91505092915050565b600081519050611bac81611238565b92915050565b600060208284031215611bc857611bc76111fc565b5b6000611bd684828501611b9d565b91505092915050565b6000611bee6020840184611446565b905092915050565b6000819050919050565b6000611c1b611c16611c1184611206565b611bf6565b611206565b9050919050565b6000611c2d82611c00565b9050919050565b6000611c3f82611c22565b9050919050565b611c4f81611c34565b82525050565b6000611c646020840184611b5b565b905092915050565b6000611c7782611c22565b9050919050565b611c8781611c6c565b82525050565b6000611c9c602084018461124f565b905092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611cd057611ccf611cae565b5b83810192508235915060208301925067ffffffffffffffff821115611cf857611cf7611ca4565b5b602082023603841315611d0e57611d0d611ca9565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000602082019050919050565b6000611d4a8385611d16565b9350611d5582611d27565b8060005b85811015611d8e57611d6b8284611c8d565b611d75888261192f565b9750611d8083611d31565b925050600181019050611d59565b5085925050509392505050565b6000611daa6020840184611285565b905092915050565b60006101808301611dc66000840184611bdf565b611dd36000860182611c46565b50611de16020840184611bdf565b611dee6020860182611c46565b50611dfc6040840184611c55565b611e096040860182611c7e565b50611e176060840184611c8d565b611e246060860182611920565b50611e326080840184611c8d565b611e3f6080860182611920565b50611e4d60a0840184611c8d565b611e5a60a0860182611920565b50611e6860c0840184611cb3565b85830360c0870152611e7b838284611d3e565b92505050611e8c60e0840184611cb3565b85830360e0870152611e9f838284611d3e565b92505050611eb1610100840184611cb3565b858303610100870152611ec5838284611d3e565b92505050611ed7610120840184611d9b565b611ee5610120860182611687565b50611ef4610140840184611d9b565b611f02610140860182611687565b50611f11610160840184611d9b565b611f1f610160860182611687565b508091505092915050565b60006020820190508181036000830152611f448184611db2565b905092915050565b6000819050919050565b6000611f71611f6c611f6784611f4c565b611bf6565b611264565b9050919050565b611f8181611f56565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fc1578082015181840152602081019050611fa6565b83811115611fd0576000848401525b50505050565b6000611fe182611f87565b611feb8185611f92565b9350611ffb818560208601611fa3565b6120048161138c565b840191505092915050565b600060808201905061202460008301876118e5565b6120316020830186611f78565b61203e60408301856117a9565b81810360608301526120508184611fd6565b905095945050505050565b60006080820190506120706000830187611f78565b61207d60208301866118e5565b61208a60408301856117a9565b818103606083015261209c8184611fd6565b905095945050505050565b6000602082840312156120bd576120bc6111fc565b5b60006120cb84828501611a0e565b91505092915050565b60006040820190506120e960008301856117a9565b6120f660208301846118e5565b9392505050565b60008115159050919050565b612112816120fd565b811461211d57600080fd5b50565b60008151905061212f81612109565b92915050565b60006020828403121561214b5761214a6111fc565b5b600061215984828501612120565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061219c82611264565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121cf576121ce612162565b5b600182019050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122476026836121da565b9150612252826121eb565b604082019050919050565b600060208201905081810360008301526122768161223a565b9050919050565b6000610180828403121561229457612293611387565b5b61229f6101806113fd565b905060006122af84828501611446565b60008301525060206122c384828501611446565b60208301525060406122d784828501611b5b565b60408301525060606122eb8482850161124f565b60608301525060806122ff8482850161124f565b60808301525060a06123138482850161124f565b60a08301525060c082013567ffffffffffffffff81111561233757612336611418565b5b612343848285016114f0565b60c08301525060e082013567ffffffffffffffff81111561236757612366611418565b5b612373848285016114f0565b60e08301525061010082013567ffffffffffffffff81111561239857612397611418565b5b6123a4848285016114f0565b610100830152506101206123ba84828501611285565b610120830152506101406123d084828501611285565b610140830152506101606123e684828501611285565b6101608301525092915050565b600060208284031215612409576124086111fc565b5b600082013567ffffffffffffffff81111561242757612426611201565b5b6124338482850161227d565b91505092915050565b600060a08201905061245160008301886118e5565b61245e60208301876118e5565b81810360408301526124708186611954565b905061247f60608301856117a9565b61248c60808301846118e5565b9695505050505050565b600060408201905081810360008301526124b08185611954565b905081810360208301526124c481846116bb565b90509392505050565b7f6e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b6000612503600a836121da565b915061250e826124cd565b602082019050919050565b60006020820190508181036000830152612532816124f6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061256f6020836121da565b915061257a82612539565b602082019050919050565b6000602082019050818103600083015261259e81612562565b905091905056fea2646970667358221220ba45b4a1a56f2b8cba91d3401cbace28127650d856842fb2f375a16e57ad54ea64736f6c63430008090033";

type ArbitrageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arbitrage__factory extends ContractFactory {
  constructor(...args: ArbitrageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrage> {
    return super.deploy(overrides || {}) as Promise<Arbitrage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Arbitrage {
    return super.attach(address) as Arbitrage;
  }
  override connect(signer: Signer): Arbitrage__factory {
    return super.connect(signer) as Arbitrage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageInterface {
    return new utils.Interface(_abi) as ArbitrageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrage {
    return new Contract(address, _abi, signerOrProvider) as Arbitrage;
  }
}
