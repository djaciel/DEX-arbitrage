/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Arbitrage, ArbitrageInterface } from "../Arbitrage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "apeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
        ],
        internalType: "struct ActionQuote",
        name: "actionQuote",
        type: "tuple",
      },
    ],
    name: "getAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pancakeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Pair",
            name: "pair",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_a",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_b",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_c",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToPay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Action",
        name: "_action",
        type: "tuple",
      },
    ],
    name: "performArbitrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e41806100206000396000f3fe60806040526004361061004a5760003560e01c8063616213441461004f578063619375da1461008c57806384800812146100b5578063becda363146100d1578063c2243379146100ed575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610f29565b610116565b6040516100839190611030565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae9190611077565b610422565b005b6100cf60048036038101906100ca919061111b565b61063d565b005b6100eb60048036038101906100e6919061111b565b610719565b005b3480156100f957600080fd5b50610114600480360381019061010f91906111f9565b6107f5565b005b60606000600367ffffffffffffffff81111561013557610134610c16565b5b6040519080825280602002602001820160405280156101635781602001602082028036833780820191505090505b509050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8460a0015185604001516040518363ffffffff1660e01b81526004016101ad929190611326565b60006040518083038186803b1580156101c557600080fd5b505afa1580156101d9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610202919061142e565b60018151811061021557610214611477565b5b60200260200101518160008151811061023157610230611477565b5b602002602001018181525050826020015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8260008151811061027157610270611477565b5b602002602001015185606001516040518363ffffffff1660e01b815260040161029b929190611326565b60006040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102f0919061142e565b60018151811061030357610302611477565b5b60200260200101518160018151811061031f5761031e611477565b5b602002602001018181525050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8260018151811061035f5761035e611477565b5b602002602001015185608001516040518363ffffffff1660e01b8152600401610389929190611326565b60006040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103de919061142e565b6001815181106103f1576103f0611477565b5b60200260200101518160028151811061040d5761040c611477565b5b60200260200101818152505080915050919050565b600081604001602081019061043791906114e4565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561047c57600080fd5b505afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611526565b90506000826040516020016104c991906118d8565b60405160208183030381529060405290508260600160208101906104ed91906118fa565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105ae5782604001602081019061053391906114e4565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f846101200135600030856040518563ffffffff1660e01b815260040161057794939291906119f9565b600060405180830381600087803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b50505050610638565b8260400160208101906105c191906114e4565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f600085610120013530856040518563ffffffff1660e01b81526004016106059493929190611a45565b600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b505050505b505050565b600084148061064c5750600083145b61065957610658611a91565b5b6000828281019061066a9190611c62565b90506000610677826108f1565b9050816060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338461018001516040518363ffffffff1660e01b81526004016106bd929190611cab565b602060405180830381600087803b1580156106d757600080fd5b505af11580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190611d0c565b5050505050505050565b60008414806107285750600083145b61073557610734611a91565b5b600082828101906107469190611c62565b90506000610753826108f1565b9050816060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338461018001516040518363ffffffff1660e01b8152600401610799929190611cab565b602060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190611d0c565b5050505050505050565b60005b838390508110156108eb5783838281811061081657610815611477565b5b905060200201602081019061082b91906118fa565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610885929190611cab565b602060405180830381600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d79190611d0c565b5080806108e390611d68565b9150506107f8565b50505050565b6000806040518060c00160405280846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff1681526020018460c0015181526020018460e00151815260200184610100015181526020018461012001518152509050600061097482610116565b9050836000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee826000815181106109aa576109a9611477565b5b60200260200101518661012001518760c0015130896101a001516040518663ffffffff1660e01b81526004016109e4959493929190611db1565b600060405180830381600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a3b919061142e565b50836020015173ffffffffffffffffffffffffffffffffffffffff16638803dbee82600181518110610a7057610a6f611477565b5b60200260200101518661014001518760e0015130896101a001516040518663ffffffff1660e01b8152600401610aaa959493929190611db1565b600060405180830381600087803b158015610ac457600080fd5b505af1158015610ad8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b01919061142e565b50836000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee82600281518110610b3657610b35611477565b5b602002602001015186610160015187610100015130896101a001516040518663ffffffff1660e01b8152600401610b71959493929190611db1565b600060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bc8919061142e565b600181518110610bdb57610bda611477565b5b602002602001015192505050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c4e82610c05565b810181811067ffffffffffffffff82111715610c6d57610c6c610c16565b5b80604052505050565b6000610c80610bec565b9050610c8c8282610c45565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc182610c96565b9050919050565b6000610cd382610cb6565b9050919050565b610ce381610cc8565b8114610cee57600080fd5b50565b600081359050610d0081610cda565b92915050565b600080fd5b600067ffffffffffffffff821115610d2657610d25610c16565b5b602082029050602081019050919050565b600080fd5b610d4581610cb6565b8114610d5057600080fd5b50565b600081359050610d6281610d3c565b92915050565b6000610d7b610d7684610d0b565b610c76565b90508083825260208201905060208402830185811115610d9e57610d9d610d37565b5b835b81811015610dc75780610db38882610d53565b845260208401935050602081019050610da0565b5050509392505050565b600082601f830112610de657610de5610d06565b5b8135610df6848260208601610d68565b91505092915050565b6000819050919050565b610e1281610dff565b8114610e1d57600080fd5b50565b600081359050610e2f81610e09565b92915050565b600060c08284031215610e4b57610e4a610c00565b5b610e5560c0610c76565b90506000610e6584828501610cf1565b6000830152506020610e7984828501610cf1565b602083015250604082013567ffffffffffffffff811115610e9d57610e9c610c91565b5b610ea984828501610dd1565b604083015250606082013567ffffffffffffffff811115610ecd57610ecc610c91565b5b610ed984828501610dd1565b606083015250608082013567ffffffffffffffff811115610efd57610efc610c91565b5b610f0984828501610dd1565b60808301525060a0610f1d84828501610e20565b60a08301525092915050565b600060208284031215610f3f57610f3e610bf6565b5b600082013567ffffffffffffffff811115610f5d57610f5c610bfb565b5b610f6984828501610e35565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fa781610dff565b82525050565b6000610fb98383610f9e565b60208301905092915050565b6000602082019050919050565b6000610fdd82610f72565b610fe78185610f7d565b9350610ff283610f8e565b8060005b8381101561102357815161100a8882610fad565b975061101583610fc5565b925050600181019050610ff6565b5085935050505092915050565b6000602082019050818103600083015261104a8184610fd2565b905092915050565b600080fd5b60006101c0828403121561106e5761106d611052565b5b81905092915050565b60006020828403121561108d5761108c610bf6565b5b600082013567ffffffffffffffff8111156110ab576110aa610bfb565b5b6110b784828501611057565b91505092915050565b600080fd5b60008083601f8401126110db576110da610d06565b5b8235905067ffffffffffffffff8111156110f8576110f76110c0565b5b60208301915083600182028301111561111457611113610d37565b5b9250929050565b60008060008060006080868803121561113757611136610bf6565b5b600061114588828901610d53565b955050602061115688828901610e20565b945050604061116788828901610e20565b935050606086013567ffffffffffffffff81111561118857611187610bfb565b5b611194888289016110c5565b92509250509295509295909350565b60008083601f8401126111b9576111b8610d06565b5b8235905067ffffffffffffffff8111156111d6576111d56110c0565b5b6020830191508360208202830111156111f2576111f1610d37565b5b9250929050565b60008060006040848603121561121257611211610bf6565b5b600084013567ffffffffffffffff8111156112305761122f610bfb565b5b61123c868287016111a3565b9350935050602061124f86828701610d53565b9150509250925092565b61126281610dff565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61129d81610cb6565b82525050565b60006112af8383611294565b60208301905092915050565b6000602082019050919050565b60006112d382611268565b6112dd8185611273565b93506112e883611284565b8060005b8381101561131957815161130088826112a3565b975061130b836112bb565b9250506001810190506112ec565b5085935050505092915050565b600060408201905061133b6000830185611259565b818103602083015261134d81846112c8565b90509392505050565b600067ffffffffffffffff82111561137157611370610c16565b5b602082029050602081019050919050565b60008151905061139181610e09565b92915050565b60006113aa6113a584611356565b610c76565b905080838252602082019050602084028301858111156113cd576113cc610d37565b5b835b818110156113f657806113e28882611382565b8452602084019350506020810190506113cf565b5050509392505050565b600082601f83011261141557611414610d06565b5b8151611425848260208601611397565b91505092915050565b60006020828403121561144457611443610bf6565b5b600082015167ffffffffffffffff81111561146257611461610bfb565b5b61146e84828501611400565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006114b182610cb6565b9050919050565b6114c1816114a6565b81146114cc57600080fd5b50565b6000813590506114de816114b8565b92915050565b6000602082840312156114fa576114f9610bf6565b5b6000611508848285016114cf565b91505092915050565b60008151905061152081610d3c565b92915050565b60006020828403121561153c5761153b610bf6565b5b600061154a84828501611511565b91505092915050565b60006115626020840184610cf1565b905092915050565b6000819050919050565b600061158f61158a61158584610c96565b61156a565b610c96565b9050919050565b60006115a182611574565b9050919050565b60006115b382611596565b9050919050565b6115c3816115a8565b82525050565b60006115d860208401846114cf565b905092915050565b60006115eb82611596565b9050919050565b6115fb816115e0565b82525050565b60006116106020840184610d53565b905092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261164457611643611622565b5b83810192508235915060208301925067ffffffffffffffff82111561166c5761166b611618565b5b6020820236038413156116825761168161161d565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000602082019050919050565b60006116be838561168a565b93506116c98261169b565b8060005b85811015611702576116df8284611601565b6116e988826112a3565b97506116f4836116a5565b9250506001810190506116cd565b5085925050509392505050565b600061171e6020840184610e20565b905092915050565b60006101c0830161173a6000840184611553565b61174760008601826115ba565b506117556020840184611553565b61176260208601826115ba565b5061177060408401846115c9565b61177d60408601826115f2565b5061178b6060840184611601565b6117986060860182611294565b506117a66080840184611601565b6117b36080860182611294565b506117c160a0840184611601565b6117ce60a0860182611294565b506117dc60c0840184611627565b85830360c08701526117ef8382846116b2565b9250505061180060e0840184611627565b85830360e08701526118138382846116b2565b92505050611825610100840184611627565b8583036101008701526118398382846116b2565b9250505061184b61012084018461170f565b611859610120860182610f9e565b5061186861014084018461170f565b611876610140860182610f9e565b5061188561016084018461170f565b611893610160860182610f9e565b506118a261018084018461170f565b6118b0610180860182610f9e565b506118bf6101a084018461170f565b6118cd6101a0860182610f9e565b508091505092915050565b600060208201905081810360008301526118f28184611726565b905092915050565b6000602082840312156119105761190f610bf6565b5b600061191e84828501610d53565b91505092915050565b6000819050919050565b600061194c61194761194284611927565b61156a565b610dff565b9050919050565b61195c81611931565b82525050565b61196b81610cb6565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119ab578082015181840152602081019050611990565b838111156119ba576000848401525b50505050565b60006119cb82611971565b6119d5818561197c565b93506119e581856020860161198d565b6119ee81610c05565b840191505092915050565b6000608082019050611a0e6000830187611259565b611a1b6020830186611953565b611a286040830185611962565b8181036060830152611a3a81846119c0565b905095945050505050565b6000608082019050611a5a6000830187611953565b611a676020830186611259565b611a746040830185611962565b8181036060830152611a8681846119c0565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006101c08284031215611ad757611ad6610c00565b5b611ae26101c0610c76565b90506000611af284828501610cf1565b6000830152506020611b0684828501610cf1565b6020830152506040611b1a848285016114cf565b6040830152506060611b2e84828501610d53565b6060830152506080611b4284828501610d53565b60808301525060a0611b5684828501610d53565b60a08301525060c082013567ffffffffffffffff811115611b7a57611b79610c91565b5b611b8684828501610dd1565b60c08301525060e082013567ffffffffffffffff811115611baa57611ba9610c91565b5b611bb684828501610dd1565b60e08301525061010082013567ffffffffffffffff811115611bdb57611bda610c91565b5b611be784828501610dd1565b61010083015250610120611bfd84828501610e20565b61012083015250610140611c1384828501610e20565b61014083015250610160611c2984828501610e20565b61016083015250610180611c3f84828501610e20565b610180830152506101a0611c5584828501610e20565b6101a08301525092915050565b600060208284031215611c7857611c77610bf6565b5b600082013567ffffffffffffffff811115611c9657611c95610bfb565b5b611ca284828501611ac0565b91505092915050565b6000604082019050611cc06000830185611962565b611ccd6020830184611259565b9392505050565b60008115159050919050565b611ce981611cd4565b8114611cf457600080fd5b50565b600081519050611d0681611ce0565b92915050565b600060208284031215611d2257611d21610bf6565b5b6000611d3084828501611cf7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d7382610dff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611da657611da5611d39565b5b600182019050919050565b600060a082019050611dc66000830188611259565b611dd36020830187611259565b8181036040830152611de581866112c8565b9050611df46060830185611962565b611e016080830184611259565b969550505050505056fea26469706673582212203e76ca5df0df2630c299b3ecf1b620a580c6f613c0bbe0fe6595f5a64904be0764736f6c63430008090033";

type ArbitrageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arbitrage__factory extends ContractFactory {
  constructor(...args: ArbitrageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrage> {
    return super.deploy(overrides || {}) as Promise<Arbitrage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Arbitrage {
    return super.attach(address) as Arbitrage;
  }
  override connect(signer: Signer): Arbitrage__factory {
    return super.connect(signer) as Arbitrage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageInterface {
    return new utils.Interface(_abi) as ArbitrageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrage {
    return new Contract(address, _abi, signerOrProvider) as Arbitrage;
  }
}
