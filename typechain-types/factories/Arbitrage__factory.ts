/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Arbitrage, ArbitrageInterface } from "../Arbitrage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "apeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "approveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Pair",
            name: "pair",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_a",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_b",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_c",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToPay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Action",
        name: "action",
        type: "tuple",
      },
    ],
    name: "getAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pancakeCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_a",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Router02",
            name: "router_b",
            type: "address",
          },
          {
            internalType: "contract IUniswapV2Pair",
            name: "pair",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_a",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_b",
            type: "address",
          },
          {
            internalType: "address",
            name: "token_c",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "path_a",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_b",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "path_c",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amountToken_a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToken_c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToPay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Action",
        name: "_action",
        type: "tuple",
      },
    ],
    name: "performArbitrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c8e806100206000396000f3fe60806040526004361061004a5760003560e01c8063619375da1461004f5780638480081214610078578063becda36314610094578063c2243379146100b0578063fbd6bb71146100d9575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610baf565b610116565b005b610092600480360381019061008d9190610cf1565b610331565b005b6100ae60048036038101906100a99190610cf1565b61040d565b005b3480156100bc57600080fd5b506100d760048036038101906100d29190610dcf565b6104e9565b005b3480156100e557600080fd5b5061010060048036038101906100fb91906111a6565b6105e5565b60405161010d91906112ad565b60405180910390f35b600081604001602081019061012b91906112cf565b73ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561017057600080fd5b505afa158015610184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a89190611311565b90506000826040516020016101bd91906116ea565b60405160208183030381529060405290508260600160208101906101e1919061170c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102a25782604001602081019061022791906112cf565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f846101200135600030856040518563ffffffff1660e01b815260040161026b949392919061181a565b600060405180830381600087803b15801561028557600080fd5b505af1158015610299573d6000803e3d6000fd5b5050505061032c565b8260400160208101906102b591906112cf565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f600085610120013530856040518563ffffffff1660e01b81526004016102f99493929190611866565b600060405180830381600087803b15801561031357600080fd5b505af1158015610327573d6000803e3d6000fd5b505050505b505050565b60008414806103405750600083145b61034d5761034c6118b2565b5b6000828281019061035e91906111a6565b9050600061036b826108f3565b9050816060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338461018001516040518363ffffffff1660e01b81526004016103b19291906118e1565b602060405180830381600087803b1580156103cb57600080fd5b505af11580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190611942565b5050505050505050565b600084148061041c5750600083145b610429576104286118b2565b5b6000828281019061043a91906111a6565b90506000610447826108f3565b9050816060015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338461018001516040518363ffffffff1660e01b815260040161048d9291906118e1565b602060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190611942565b5050505050505050565b60005b838390508110156105df5783838281811061050a5761050961196f565b5b905060200201602081019061051f919061170c565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016105799291906118e1565b602060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190611942565b5080806105d7906119cd565b9150506104ec565b50505050565b60606000600367ffffffffffffffff81111561060457610603610e45565b5b6040519080825280602002602001820160405280156106325781602001602082028036833780820191505090505b509050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8461012001518560c001516040518363ffffffff1660e01b815260040161067d929190611aad565b60006040518083038186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106d29190611bb5565b6001815181106106e5576106e461196f565b5b6020026020010151816000815181106107015761070061196f565b5b602002602001018181525050826020015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f826000815181106107415761074061196f565b5b60200260200101518560e001516040518363ffffffff1660e01b815260040161076b929190611aad565b60006040518083038186803b15801561078357600080fd5b505afa158015610797573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107c09190611bb5565b6001815181106107d3576107d261196f565b5b6020026020010151816001815181106107ef576107ee61196f565b5b602002602001018181525050826000015173ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8260018151811061082f5761082e61196f565b5b60200260200101518561010001516040518363ffffffff1660e01b815260040161085a929190611aad565b60006040518083038186803b15801561087257600080fd5b505afa158015610886573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108af9190611bb5565b6001815181106108c2576108c161196f565b5b6020026020010151816002815181106108de576108dd61196f565b5b60200260200101818152505080915050919050565b6000806108ff836105e5565b9050826000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee826000815181106109355761093461196f565b5b60200260200101518561012001518660c0015130886101a001516040518663ffffffff1660e01b815260040161096f959493929190611bfe565b600060405180830381600087803b15801561098957600080fd5b505af115801561099d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109c69190611bb5565b50826020015173ffffffffffffffffffffffffffffffffffffffff16638803dbee826001815181106109fb576109fa61196f565b5b60200260200101518561014001518660e0015130886101a001516040518663ffffffff1660e01b8152600401610a35959493929190611bfe565b600060405180830381600087803b158015610a4f57600080fd5b505af1158015610a63573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a8c9190611bb5565b50826000015173ffffffffffffffffffffffffffffffffffffffff16638803dbee82600281518110610ac157610ac061196f565b5b602002602001015185610160015186610100015130886101a001516040518663ffffffff1660e01b8152600401610afc959493929190611bfe565b600060405180830381600087803b158015610b1657600080fd5b505af1158015610b2a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b539190611bb5565b600181518110610b6657610b6561196f565b5b6020026020010151915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b60006101c08284031215610ba657610ba5610b8a565b5b81905092915050565b600060208284031215610bc557610bc4610b80565b5b600082013567ffffffffffffffff811115610be357610be2610b85565b5b610bef84828501610b8f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2382610bf8565b9050919050565b610c3381610c18565b8114610c3e57600080fd5b50565b600081359050610c5081610c2a565b92915050565b6000819050919050565b610c6981610c56565b8114610c7457600080fd5b50565b600081359050610c8681610c60565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610cb157610cb0610c8c565b5b8235905067ffffffffffffffff811115610cce57610ccd610c91565b5b602083019150836001820283011115610cea57610ce9610c96565b5b9250929050565b600080600080600060808688031215610d0d57610d0c610b80565b5b6000610d1b88828901610c41565b9550506020610d2c88828901610c77565b9450506040610d3d88828901610c77565b935050606086013567ffffffffffffffff811115610d5e57610d5d610b85565b5b610d6a88828901610c9b565b92509250509295509295909350565b60008083601f840112610d8f57610d8e610c8c565b5b8235905067ffffffffffffffff811115610dac57610dab610c91565b5b602083019150836020820283011115610dc857610dc7610c96565b5b9250929050565b600080600060408486031215610de857610de7610b80565b5b600084013567ffffffffffffffff811115610e0657610e05610b85565b5b610e1286828701610d79565b93509350506020610e2586828701610c41565b9150509250925092565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e7d82610e34565b810181811067ffffffffffffffff82111715610e9c57610e9b610e45565b5b80604052505050565b6000610eaf610b76565b9050610ebb8282610e74565b919050565b600080fd5b6000610ed082610c18565b9050919050565b610ee081610ec5565b8114610eeb57600080fd5b50565b600081359050610efd81610ed7565b92915050565b6000610f0e82610c18565b9050919050565b610f1e81610f03565b8114610f2957600080fd5b50565b600081359050610f3b81610f15565b92915050565b600067ffffffffffffffff821115610f5c57610f5b610e45565b5b602082029050602081019050919050565b6000610f80610f7b84610f41565b610ea5565b90508083825260208201905060208402830185811115610fa357610fa2610c96565b5b835b81811015610fcc5780610fb88882610c41565b845260208401935050602081019050610fa5565b5050509392505050565b600082601f830112610feb57610fea610c8c565b5b8135610ffb848260208601610f6d565b91505092915050565b60006101c0828403121561101b5761101a610e2f565b5b6110266101c0610ea5565b9050600061103684828501610eee565b600083015250602061104a84828501610eee565b602083015250604061105e84828501610f2c565b604083015250606061107284828501610c41565b606083015250608061108684828501610c41565b60808301525060a061109a84828501610c41565b60a08301525060c082013567ffffffffffffffff8111156110be576110bd610ec0565b5b6110ca84828501610fd6565b60c08301525060e082013567ffffffffffffffff8111156110ee576110ed610ec0565b5b6110fa84828501610fd6565b60e08301525061010082013567ffffffffffffffff81111561111f5761111e610ec0565b5b61112b84828501610fd6565b6101008301525061012061114184828501610c77565b6101208301525061014061115784828501610c77565b6101408301525061016061116d84828501610c77565b6101608301525061018061118384828501610c77565b610180830152506101a061119984828501610c77565b6101a08301525092915050565b6000602082840312156111bc576111bb610b80565b5b600082013567ffffffffffffffff8111156111da576111d9610b85565b5b6111e684828501611004565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61122481610c56565b82525050565b6000611236838361121b565b60208301905092915050565b6000602082019050919050565b600061125a826111ef565b61126481856111fa565b935061126f8361120b565b8060005b838110156112a0578151611287888261122a565b975061129283611242565b925050600181019050611273565b5085935050505092915050565b600060208201905081810360008301526112c7818461124f565b905092915050565b6000602082840312156112e5576112e4610b80565b5b60006112f384828501610f2c565b91505092915050565b60008151905061130b81610c2a565b92915050565b60006020828403121561132757611326610b80565b5b6000611335848285016112fc565b91505092915050565b600061134d6020840184610eee565b905092915050565b6000819050919050565b600061137a61137561137084610bf8565b611355565b610bf8565b9050919050565b600061138c8261135f565b9050919050565b600061139e82611381565b9050919050565b6113ae81611393565b82525050565b60006113c36020840184610f2c565b905092915050565b60006113d682611381565b9050919050565b6113e6816113cb565b82525050565b60006113fb6020840184610c41565b905092915050565b61140c81610c18565b82525050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261143e5761143d61141c565b5b83810192508235915060208301925067ffffffffffffffff82111561146657611465611412565b5b60208202360384131561147c5761147b611417565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b60006114ab8383611403565b60208301905092915050565b6000602082019050919050565b60006114d08385611484565b93506114db82611495565b8060005b85811015611514576114f182846113ec565b6114fb888261149f565b9750611506836114b7565b9250506001810190506114df565b5085925050509392505050565b60006115306020840184610c77565b905092915050565b60006101c0830161154c600084018461133e565b61155960008601826113a5565b50611567602084018461133e565b61157460208601826113a5565b5061158260408401846113b4565b61158f60408601826113dd565b5061159d60608401846113ec565b6115aa6060860182611403565b506115b860808401846113ec565b6115c56080860182611403565b506115d360a08401846113ec565b6115e060a0860182611403565b506115ee60c0840184611421565b85830360c08701526116018382846114c4565b9250505061161260e0840184611421565b85830360e08701526116258382846114c4565b92505050611637610100840184611421565b85830361010087015261164b8382846114c4565b9250505061165d610120840184611521565b61166b61012086018261121b565b5061167a610140840184611521565b61168861014086018261121b565b50611697610160840184611521565b6116a561016086018261121b565b506116b4610180840184611521565b6116c261018086018261121b565b506116d16101a0840184611521565b6116df6101a086018261121b565b508091505092915050565b600060208201905081810360008301526117048184611538565b905092915050565b60006020828403121561172257611721610b80565b5b600061173084828501610c41565b91505092915050565b61174281610c56565b82525050565b6000819050919050565b600061176d61176861176384611748565b611355565b610c56565b9050919050565b61177d81611752565b82525050565b61178c81610c18565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117cc5780820151818401526020810190506117b1565b838111156117db576000848401525b50505050565b60006117ec82611792565b6117f6818561179d565b93506118068185602086016117ae565b61180f81610e34565b840191505092915050565b600060808201905061182f6000830187611739565b61183c6020830186611774565b6118496040830185611783565b818103606083015261185b81846117e1565b905095945050505050565b600060808201905061187b6000830187611774565b6118886020830186611739565b6118956040830185611783565b81810360608301526118a781846117e1565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006040820190506118f66000830185611783565b6119036020830184611739565b9392505050565b60008115159050919050565b61191f8161190a565b811461192a57600080fd5b50565b60008151905061193c81611916565b92915050565b60006020828403121561195857611957610b80565b5b60006119668482850161192d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d882610c56565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a0b57611a0a61199e565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000602082019050919050565b6000611a5a82611a16565b611a648185611a21565b9350611a6f83611a32565b8060005b83811015611aa0578151611a87888261149f565b9750611a9283611a42565b925050600181019050611a73565b5085935050505092915050565b6000604082019050611ac26000830185611739565b8181036020830152611ad48184611a4f565b90509392505050565b600067ffffffffffffffff821115611af857611af7610e45565b5b602082029050602081019050919050565b600081519050611b1881610c60565b92915050565b6000611b31611b2c84611add565b610ea5565b90508083825260208201905060208402830185811115611b5457611b53610c96565b5b835b81811015611b7d5780611b698882611b09565b845260208401935050602081019050611b56565b5050509392505050565b600082601f830112611b9c57611b9b610c8c565b5b8151611bac848260208601611b1e565b91505092915050565b600060208284031215611bcb57611bca610b80565b5b600082015167ffffffffffffffff811115611be957611be8610b85565b5b611bf584828501611b87565b91505092915050565b600060a082019050611c136000830188611739565b611c206020830187611739565b8181036040830152611c328186611a4f565b9050611c416060830185611783565b611c4e6080830184611739565b969550505050505056fea26469706673582212205266323c997f6adffff0620ef351f538f3437460353683fb279d43ff0d673b8a64736f6c63430008090033";

type ArbitrageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arbitrage__factory extends ContractFactory {
  constructor(...args: ArbitrageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Arbitrage> {
    return super.deploy(overrides || {}) as Promise<Arbitrage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Arbitrage {
    return super.attach(address) as Arbitrage;
  }
  override connect(signer: Signer): Arbitrage__factory {
    return super.connect(signer) as Arbitrage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageInterface {
    return new utils.Interface(_abi) as ArbitrageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Arbitrage {
    return new Contract(address, _abi, signerOrProvider) as Arbitrage;
  }
}
